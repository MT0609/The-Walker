
Each req call api => Check res.msg. If 'success' => OK else FAIL

// Get all giffcode
Method: GET
Auth: Yes,
Roles: Admin only
Req.body: {}
URL: /giffcodes?page=2&limit=2
If 'success' => {
    msg: 'success'.
    length: Number,
    giffcodes: Array,
    request: {
        currentPage: 2,
        totalPages: 4,
        previous: {
            page: 1,
            limit: 2
        },
        next: {
            page: 3,
            limit: 2
        }
    }
}

Note: ?page=2&limit=2 (option)

----------------------------------------------------------------------------

// Get one giffcode
Method: GET
Auth: Yes,
Roles: Admin only
Req.params: _id
URL: /giffcodes/:_id
If 'success' => {
    msg: 'success',
    code: {

    }
}

----------------------------------------------------------------------------

// Create a new code
Method: POST
Auth: Yes
Roles: Admin only
Req.body {
	"code": "12345678",
	"type": "Vip", type in ["Vip", "Normal"]
	"items": "5f9ac4ba98989a002e27c87a 5f9ac4ba98989a002e27c87a",
    "expiresTime": Number (day) ----> option
}
URL: /giffcodes
If 'success' => {
    msg: 'success',
    code: {

    }
}

----------------------------------------------------------------------------

// Use a giftcode
Method: POST
Auth: Yes
Roles: User or Admin
Req.body {}
URL: /giffcodes/:code
If 'success' => {
    msg: 'success'
}

----------------------------------------------------------------------------

// Update giffcode (name, type, price, not thumbnail)
Method: PATCH
Auth: YES
Roles: Admin only
Req.body:
[
    {
        "propName": "code",
        "value": "newValue"
    },
    {
        "propName": "type",
        "value": "newType"
    },
    ....
]

URL: /giffcodes/:_id
If 'success' => {
    msg: 'success'
}

----------------------------------------------------------------------------

// Delete code
Method: DELETE
Auth: Yes
Roles: Admin only
Req.params: _id
URL: /giffcodes/:code
If 'success' => Obj {
    msg: 'success'
}

----------------------------------------------------------------------------