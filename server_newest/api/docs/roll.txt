
Each req call api => Check res.msg. If 'success' => OK else FAIL

// Get all rollup
Method: GET
Auth: No
Req.body: {}
URL: /rolls?page=2&limit=8
If 'success' => {
    msg: 'success'.
    length: Number,
    rolls: Array,
    request: {
        currentPage: 2,
        totalPages: 4,
        previous: {
            page: 1,
            limit: 8
        },
        next: {
            page: 3,
            limit: 8
        }
    }
}

NOTE: ?page=2&limit=8 (option)

----------------------------------------------------------------------------

// Get one roll
Method: GET
Auth: No,
Req.params: rollupDay (1 -> 31)
URL: /rolls/:rollupDay
If 'success' => {
    msg: 'success',
    roll: {

    }
}

----------------------------------------------------------------------------

// Get prize roll
Method: POST
Auth: Yes,
Roles: User or Admin
Req.params: rollupDay (1 -> 31)
URL: /rolls/:rollupDay
If 'success' => {
    msg: 'success',
    userItem: {

    }
}

----------------------------------------------------------------------------

// Create a new roll
Method: POST
Auth: Yes
Roles: Admin only
Req.body {
    day: 'Number' 1 -> 31 unique,
    coin: 'Number' option, default: 1000,
    item: 'ObjectId' option, default: null
}
URL: /rolls
If 'success' => {
    msg: 'success',
    roll: {

    }
}

----------------------------------------------------------------------------

// Update roll
Method: PATCH
Auth: YES
Roles: Admin only
Req.body:
[
    {
        "propName": "coin",
        "value": "new coin"
    },
    ....
]

URL: /rolls/:rollupDay (1 -> 31)
If 'success' => {
    msg: 'success'
}

----------------------------------------------------------------------------

// Delete roll
Method: DELETE
Auth: Yes
Roles: Admin only
Req.params: rollupDay (1 -> 31)
URL: /rolls/:rollupDay
If 'success' => Obj {
    msg: 'success'
}

----------------------------------------------------------------------------